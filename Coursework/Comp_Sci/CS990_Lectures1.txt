1. Entity Relationship Modelling (ERM)

1.1. Terminology

* Recall: `relational' (model) vs. (entity) `relationship' (model)
* ERM is not anything to do with databases

* Entity: object which exists and is distinguishable from others
	- Object: Person, Car, City
	- Event: Birth, Basket Score
	- Activity: Oil production
	- Concepts: Supplies

* Attributes: property of an entity
	- Entity type: purchase-order
	- Entity instance: a particular purchase order
	- Attributes: order no., supplier, date

* Identifier: attribute or set of which uniquely ID instance of an eintity type
	- Single Attribute Identifier: Car | Registration No.
	- Multiple Attribute Indentifier: Basket Score | Team 1, Team 2, Date, Time

* Relationship: association between 2 or more entities
	- E.g. relationship STORES between PRODUCT and WAREHOUSE
	- Type: STORES
	- Occurence: Product 1 is in Warehouse 3
	- Identifier: Compositie of identifiers of entities

	- Degree of Relationship
		- One-to-One (1:1): E.g. Team/Coach
		- One-to-Many (1:N): E.g. Game/Basket Score
		- Many-to-Many (N:M): E.g. Student/Class

	- Optionality of Relationships
		- Obligatory: Every entity instance participates in relationship
		- Non-Obligatory: Entity instance may exist independently of relathionship
			- E.g. Non-O on EMPLOYEE (Vehicle/Employee): Some employees may not have work cars assigned
			- E.g. Non-O on either (Student/Class): Some students may not have any classes, some classes may not have any attendance
				- MATCH ---< GOAL
			- E.g. Non-O on Basket Score (Game/Basket Score): All (many) goals must occur in a (one) match, but a match may have no goals
				- STUDENT >---< CLASS
		- ---, not ___; dashed line, not solid line

1.2. Process: Entity & Relationship

* System Description
* Deduce entities by searching for nouns
* Deduce attributes by searching for nouns
* Deduce relationships by searching for key terms like `has', `is composed of', ...
* Obligatory or optional?

* E.g.: Busses
	
	Relationship Name	Entities	Degree		Optionality
	-----------------	--------	------		-----------
	ALLOCATED TO		Route, Bus	1:N		Obligatory
	PASSES THROUGH 1	Route, Town	N:M		Obligatory
	PASSES THROUGH 2	Stage, Town	N:M		Obligatory
	DRIVER ALLOCATED TO	Stage, Driver	1:N		Obligatory
	ROUTE HAS STAGE		Route, Stage	1:N		Obligatory

1.3. Process: ERM

* E.g. (cont.): Buses
	- Implementing Entities
		- BUS: busses owned by company
		- ROUTE: routes driven by company
		- STAGE: segments of route
		- DRIVER: driver employed by the company
		- TOWN: towns through which routes pass

	- ROUTE ___< (Allocated To) BUS
	- ROUTE >___< (Passes Through 1) TOWN
	- STAGE >___< (Passes Through 2) TOWN
	- STAGE ___< (Driver Allocated To) DRIVER
	- ROUTE ___< (Route Has Stage) STAGE

* Deduce attributes for entities and add surrogates (artificial identifier)
	- BUS: (Bus Number), Capacity, Make, Type
	- ROUTE: (Route NUmber), Avgerage Passengers
	- STAGE: (StageID), Stage Name
	- DRIVER: (EmpID), Name, Address, Telephone No.
	- TOWN: (TownID), Name
* No foreign keys at this stage as no tables present

2. Enhanced Entity Relationship Model (EERM)

2.1. Special Cases

* Many-to-Many Relationships
	- E.g. STUDENT >___< (Takes) CLASS
	- Where does class result go?
	- Cant store the result in either STUDENT or CLASS
	- So, add new entity: ENROLMENT
	- E.g. STUDENT ___< [ENROLMENT] >___CLASS
		- 1:N/N:1
		- Each student has many enrolments, each class has many enrolments
		- Each mark for each student goes in ENROLMENT

* Ternary Relationships (three; non-binary)
	- E.g. SUPPLIER >___< (Supplies) PROJECT >___< (Used On) PART >___< (Supplied By) SUPPLIER
	- Full Linker Setup: SUPPLIER ___< [Supplies Project] >___ PROJECT ___< [Uses Part] >___ PART ___< [Supplies Part] >__ SUPPLIER
	- Real Linker Setup:
				SUPPLIER
				   |
				   |
				   ^
		     PART ___< [CONTRACT] >___ PROJECT

	- A CONTRACT is an agreement for a supplier to provide a part to a project

* Heirarchical Relationships
	- E.g. One NURSE may have a relationship named SUPERVISORS
	- NURSE has a relasionship w/ itself
	- A NURSE may supervise many nurses
	- Perhaps create a new entity such as WARD SISTER to supervise many NURSEs

2.2. Enhanced Entity Relationship Model (EERM)

* Subtypes of entities (supertypes)
	- E.g. EMPLOYEE {ENGINEER, TECHNICIAN, SECRETARY}
		- Specialization: an employee specializes in something
		- Total specialization: All are employees
		- Disjunction: no engineers are technicians, ...
	- All can exist together
